title: Como implementar dois "Drawer Navigators" em sua aplicação React Native
link: >-
  https://medium.com/reactbrasil/como-implementar-dois-drawer-navigators-em-sua-aplica%C3%A7%C3%A3o-react-native-35e31be3a691?source=rss-3fab1a6dde89------2
guid:
  isPermaLink: 'false'
  $t: 'https://medium.com/p/35e31be3a691'
category:
  - react-navigation-5
  - react-navigation
  - react-native
  - redux
'dc:creator': Brunno Hofmann
pubDate: 'Wed, 15 Apr 2020 23:42:28 GMT'
'atom:updated': '2020-04-22T12:45:30.721Z'
'content:encoded': "<h3>Como implementar dois “Drawer Navigators” em sua aplicação React\_Native</h3><p>Algumas aplicações usam dois menus de navegação para melhorar a usabilidade do usuário, implementar isso usando React Native era um desafio até\_agora…</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*9GpWhtouByauNs_qWOhYiQ.gif\" /></figure><p>I published a english version of this\_post:</p><p><a href=\"https://medium.com/@brunnohofmann/how-to-implement-two-drawer-navigators-on-your-react-native-application-c899aeedf2cc\">How to implement two “Drawer Navigators” on your React Native application</a></p><p>Esses dias me deparei com um projeto que precisou da implementação de dois menus laterais (designers ❤). A princípio imaginei que fosse necessário apenas inserir alguns parâmetros nos menus de navegação do <strong>React Navigation</strong> e estaria tudo certo, mas me enganei homericamente! tsc tsc\_tsc</p><p>Mesmo com muitas pesquisas não cheguei a um resultado, principalmente com as grandes mudanças que aconteceram recentemente na api do <strong>React Navigation — versão\_5.</strong></p><p>Neste artigo mostro como realizei a implementação desta funcionalidade. Espero que possa te ajudar de alguma forma.<br>Se tiver algum feedback só me falar ou comentar aqui\_embaixo.</p><blockquote>Como estamos no mundo do Javascript, pode ser que atualmente exista uma forma mais simples de resolver o problema.</blockquote><p>Para esta implementação vamos\_utilizar</p><ul><li>React Native</li><li>React Navigation</li><li>Redux</li></ul><blockquote>Para prosseguir vou entender que você já tem o conhecimento básico do funcionamento do React Navigation, Hooks e\_Redux<em>.</em></blockquote><h4>Instalando Dependências</h4><p>Para iniciar vamos instalar nossas dependências</p><pre>npm install redux react-redux</pre><ul><li>Para instalar o React-Navigation siga as <a href=\"https://reactnavigation.org/docs/getting-started\">instruções do site</a>. (é rápido, precisamos apenas de algumas ações): <a href=\"https://reactnavigation.org/docs/getting-started\">clique\_aqui</a></li></ul><h4>Estruturando Navigators</h4><p>A React Navigation nos trás uma série de menus de navegação. Para chegar no nosso objetivo vamos usar os <strong>DrawerNavigator</strong> e o <strong>StackNavigator</strong>, que precisamos instalar de forma separada.</p><pre>npm install <strong>@react-navigation/stack @react-navigation/drawer</strong></pre><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/681/1*MDWRrWGIwCa782SIZYaJiA.png\" /></figure><p>Visualmente nossos navegadores ficarão graficamente estruturados desta forma ao lado, onde cada caixa representa um componente.<br>Isso quer dizer que no resultado final os nossos navegadores ficarão do <em>lado esquerdo e direito da tela</em>, mas no código colocaremos <em>um dentro do\_outro</em>.</p><p>Outro ponto importante é que o Drawer Navigator inclui cada Screen que você insere dentro dele como um <em>menu de forma automática</em>, mas podemos substituir este comportamento utilizando um <em>menu personalizado</em>, isso será necessário para que possamos escolher que opções serão exibidas no menu esquerdo e quais serão exibidas no menu\_direito.</p><p>1 — <strong>Configurando o AppPrincipal</strong></p><p>Em <strong>/routes/MainStack.js</strong> colocamos nosso Stack Navigator da aplicação. Ele conterá todas as telas navegáveis da aplicação.<br>Nosso app simples contém apenas duas telas: Home e Users. Para elas você pode incluir qualquer conteúdo.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/392beb8e6f3f3669a173ef8ab5144748/href\">https://medium.com/media/392beb8e6f3f3669a173ef8ab5144748/href</a></iframe><p><strong>2 — Configurando o Drawer\_Esquerdo</strong></p><p>Aqui criamos o menu esquerdo. <br>Na linha 16 incluímos a <em>MainStack</em> que criamos no passo anterior. <br>Na linha 15 incluímos um <em>CustomDrawerComp</em> que começamos a criar na linha 21. <br>Neste CustomDrawerComp colocaremos todas as opções que queremos que apareçam no menu. É importante enviar também todas as props para o componente DrawerContentScrollView, pois ele é usado em outras dependências.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/cda599b06467aa4ec40a682b7183027b/href\">https://medium.com/media/cda599b06467aa4ec40a682b7183027b/href</a></iframe><p><strong>3 — Configurando o Drawer\_Direito</strong></p><p>Incluimos o <em>LeftDrawer</em> que criamos no passo anterior dentro do <em>RightDrawer</em>\_, que é bem semelhante ao <em>LeftDrawer, </em>veja que apenas usamos o atributo <strong>drawerPosition=”right” </strong>para informar a posição do menu.<strong> </strong>Voltaremos nele\_depois.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/1b4b6380277fc08644d241dfbb6f4a19/href\">https://medium.com/media/1b4b6380277fc08644d241dfbb6f4a19/href</a></iframe><p><strong>4 — Configurando Navigation Container</strong></p><p>O NavigationContainer é um <em>StackNavigator</em> que engloba o <em>RightDrawer</em>, como exemplicado no desenho lá em\_cima.</p><blockquote>É importante incluir <strong>options=</strong>{{<strong>headerShown</strong>: <strong>false</strong>}} nas stacks desta configuração para que não exibam várias barras de título desnecessária da aplicação.</blockquote><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/a9a716f2ad002b91ee44a4942c8be1ed/href\">https://medium.com/media/a9a716f2ad002b91ee44a4942c8be1ed/href</a></iframe><p>5 — <strong>Por fim…</strong><br>…colocamos o NavigationContainer, no App.js e podemos executar a aplicação. <br>Os outros imports que neste arquivo são necessários para funcionamento por gestos do navigation.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/fdacf72caa280220f4f87447f9456efa/href\">https://medium.com/media/fdacf72caa280220f4f87447f9456efa/href</a></iframe><p>Se tudo ocorreu bem você verá uma tela semelhante a\_esta.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*hBsQunuV_EiXJ1edG63-NQ.gif\" /></figure><p>Como podemos ver não existem botões para abrirmos os menus, mas o funcionamento de slide acontece graças ao <strong>react-native-gesture-handler.</strong></p><p>Para incluírmos os botões que realizam a abertura dos drawer-navigators precisamos usar o <strong>Redux</strong> e para entender o porquê dele ser necessário, precisamos entender um pouco do <em>contexto dos navigators</em>.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/681/1*MDWRrWGIwCa782SIZYaJiA.png\" /></figure><p>Cada Drawer ou Stack recebe por padrão a propriedade ‘<em>navigation</em>’. No caso dos <em>Left</em> e <em>Right</em> <em>navigators</em>, ela possui o método <em>OpenDrawer, </em>responsável por, programaticamente, abrir nosso menu. <br>Acontece que nossas screens dentro do <em>Stack</em> <em>AppPrincipal</em> só conhecem o contexto do método <em>navigation.OpenDrawer </em>do Drawer esquerdo, isso quer dizer que se quisermos usar um botão que abra nosso menu lateral ele apenas abrirá o menu esquerdo. <br>Como fazemos então para criar um botão que também abra nosso menu direito? Aí que entra o\_Redux.</p><h4>Configurando Redux</h4><p>Aqui vamos apenas inserir um <em>reducer</em>. <br>Usamos a estratégia de <a href=\"https://blog.rocketseat.com.br/estrutura-redux-escalavel-com-ducks/\">Duck Pattern</a> e chamaremos o nosso duck de appConfig.</p><p>O estado <strong><em>rightDrawerState</em> </strong>controlará quando o menu lateral\_abrirá</p><blockquote>A configuração da store do redux fica a seu critério.</blockquote><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/aec66c390b2375373ad48b7ae760e1d5/href\">https://medium.com/media/aec66c390b2375373ad48b7ae760e1d5/href</a></iframe><h4>Usando o\_reducer</h4><p>Para saber quando abrir o menu direito temos alguns\_passos.</p><p>1 — Por meio do hook useSelector acessamos o estado do reducer criado logo acima<br>2 — Por meio do hook useEffect controlamos em que momento o navigation chamará nosso método OpenDrawer na linha 22, que dessa vez é acessado pelo <strong><em>DrawerActions, </em></strong>já que nosso objeto navigation recebido via props não tem esse método (lembra que falamos de contexto?). <br>3 — Logo após abrir o menu disparamos outra ação na linha 23, resetando o valor da nossa <em>rightDrawerState</em> na store. <br>4 — Este é um dos passos mais importantes. Viu que na linha 21 e 25 fazemos uma verificação (rightDrawerState === <strong>‘toggle’</strong>)? Na linha 21 garantimos que nossa função de abrir o menu será chamada se, e somente se, o valor do nosso reducer rightDrawerState for ‘toggle’. Já na linha 25 essa comparação é necessária para que nosso hook useEffect seja chamado novamente, mas apenas se\_, e somente se, o valor do nosso reducer rightDrawerState for <strong>atualizado </strong>em algum momento para ‘toggle’.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/87a90e21a045236bf98bdd0ed3658b59/href\">https://medium.com/media/87a90e21a045236bf98bdd0ed3658b59/href</a></iframe><h4>Finalizando</h4><p>Agora só precisamos disparar as chamadas dos menus em nossa aplicação. <br>Para isso vamos atualizar nosso componente MainStack.js.</p><p>Agora sabemos que por meio do contexto do objeto <em>navigation</em> podemos abrir o menu esquerdo a qualquer momento. Já para abrir o menu direito só precisamos atualizar nosso reducer appConfig.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/eb3ec3e5f4b5f53cffb52ee2a9d842b0/href\">https://medium.com/media/eb3ec3e5f4b5f53cffb52ee2a9d842b0/href</a></iframe><p>Se tudo correu bem temos os dois menus funcionando perfeitamente.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*9GpWhtouByauNs_qWOhYiQ.gif\" /></figure><p>Espero que este artigo possa ter lhe ajudado de alguma forma.<br>Se tiver feedbacks a respeito pode comentar aqui\_embaixo.</p><p>Você pode acessar o projeto em ação aqui\_embaixo.</p><p><a href=\"https://github.com/brunnohofmann/React-Native-Left-and-Right-Navigator\">brunnohofmann/React-Native-Left-and-Right-Navigator</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=35e31be3a691\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/reactbrasil/como-implementar-dois-drawer-navigators-em-sua-aplica%C3%A7%C3%A3o-react-native-35e31be3a691\">Como implementar dois &quot;Drawer Navigators&quot; em sua aplicação React Native</a> was originally published in <a href=\"https://medium.com/reactbrasil\">React Brasil</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"
