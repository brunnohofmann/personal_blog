title: How to implement two “Drawer Navigators” on your React Native application
link: >-
  https://medium.com/@brunnohofmann/how-to-implement-two-drawer-navigators-on-your-react-native-application-c899aeedf2cc?source=rss-3fab1a6dde89------2
guid:
  isPermaLink: 'false'
  $t: 'https://medium.com/p/c899aeedf2cc'
category:
  - react-navigation
  - react-native
  - redux
  - react
  - mobile-app-development
'dc:creator': Brunno Hofmann
pubDate: 'Wed, 22 Apr 2020 12:43:54 GMT'
'atom:updated': '2020-07-07T17:33:20.911Z'
'content:encoded': "<p>Some applications use two navigation menus to improve usability, to implement this using React-Native was a challenge until\_now…</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*9GpWhtouByauNs_qWOhYiQ.gif\" /></figure><p>Esta é uma versão em Inglês de um artigo escrito originalmente em português:</p><p><a href=\"https://medium.com/reactbrasil/como-implementar-dois-drawer-navigators-em-sua-aplica%C3%A7%C3%A3o-react-native-35e31be3a691\">Como implementar dois &quot;Drawer Navigators&quot; em sua aplicação React Native</a></p><p>These days I came across a project which needed two drawer menu implementation (designers ❤). At the beginning, I thought it was only needed to insert some parameters into the React Navigation menus and everything would work fine, but I was wrong! <em>tisk</em> <em>tisk</em>\_<em>tisk</em></p><p>Even researching a lot, I didn’t find a solution, mainly with the recent changes on <strong>React Navigation API (v.\_5)</strong></p><p>In this article, I’ll gonna show how to implement this functionality. I hope that it helps you\_somehow.</p><blockquote>This is the Javascript world, so maybe there’s actually another simpler way to solve this\_problem.</blockquote><p>We’ll gonna\_use:</p><ul><li>React Native</li><li>React Navigation</li><li>Redux</li></ul><blockquote>To proceed I’ll assume<em> </em>you have some basic knowledge about React Navigation, Hooks and\_Redux.</blockquote><h4>Installing dependencies</h4><p>We need to install some dependencies to\_start.</p><pre>npm install redux react-redux</pre><ul><li><strong>React-navigation</strong> is needed as well. Follow the instructions <a href=\"https://reactnavigation.org/docs/getting-started\">here</a> (it’s quick, we just need some actions): <a href=\"https://reactnavigation.org/docs/getting-started\">click\_here</a></li></ul><h4>Structuring Navigators</h4><p>React Navigation brings some navigation menus. To reach our goal we’re going to use both <strong>DrawerNavigator</strong> and <strong>StackNavigator</strong>, which have to be installed separately.</p><pre>npm install <strong>@react-navigation/stack @react-navigation/drawer</strong></pre><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/621/1*peJa8Yzs9M4jLthXRfjxVg.png\" /></figure><p>Visually our navigators will be <em>graphically structured like on this image</em>, where each box represents a component. It means that on the final result <em>our navigators will be on the left and right side</em>, but we will place it <em>one inside another on the codebase</em>.</p><p>Drawer Navigator creates, by default, a menu item for every screen, but we can override this behavior using a custom component, we have to do it to choose which menu needs to be shown into every navigator.</p><p>1 — <strong>Setting the MainStack</strong></p><p>We created a file:<strong> /routes/MainStack.js, </strong>that will contain all the other screens of the application. Our app just has two screens: Home and Users. You can insert any content you want\_here.</p><p><strong>2 — Setting Left\_Drawer</strong></p><p>On line 16 we put the MainStack created in the previous\_step.</p><p>On line 15 we put a <em>CustomDrawerComp, </em>created on line\_21.</p><p>On CustomDrawerComp we place every option that we want to be shown on Left Menu. Don’t forget to pass the <em>props</em> param to DrawerContentScrollView component, cause its used into other dependencies.</p><p><strong>3 — Setting Right\_Drawer</strong></p><p>We put the created <em>LeftDrawer </em>into the <em>RightDrawer</em>, which is very similar to <em>LeftDrawer, </em>we have used the attribute <strong>drawerPosition=”right” </strong>to determine the menu position. We’ll come back to this file\_later.</p><p><strong>4 — Setting Navigation Container</strong></p><p>NavigationContainer is a <em>StackNavigator which just contains the RightDrawer</em>, as exemplified in the drawing\_above.</p><blockquote>It’s important to include <strong>options=</strong>{{<strong>headerShown</strong>: <strong>false</strong>}} into the stack, otherwise, we may show some unnecessary header in the application screens.</blockquote><p>5 — <strong>Lastly…</strong><br>…we include the NavigationContainer in the App.js and we can run the application.</p><p>Other imports shown on App.js are necessary for the app to recognize the gestures we do on the\_screen.</p><p>If everything went well you will see a screen similar to this\_one:</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*hBsQunuV_EiXJ1edG63-NQ.gif\" /></figure><p>We don’t have buttons to open the menus yet, but the slide feature happens because of the <strong>react-native-gesture-handler </strong>lib<strong>.</strong></p><p>Now we need to include some buttons to open our drawer-navigators and we gonna use <strong>Redux </strong>to do this. But to understand WHY we need to use it, we need to understand the navigator’s<em> context\_first.</em></p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/621/1*peJa8Yzs9M4jLthXRfjxVg.png\" /></figure><p>Every Drawer or Stack receives a ‘navigation’ param by default. The Drawer Navigator also has the <em>OpenDrawer </em>method<em>, responsible for</em>, programmatically, opening the\_menu.</p><p>The big question is that the application screens inside our MainStack only know the navigation method context from the Left Drawer. It means that if we want to use a button that opens our drawer menu, it will only open the left\_menu.</p><p>How can we create a button that opens our Right Menu as well? Now Redux takes\_action.</p><h4>Setting Redux</h4><p>Here we are going to create just one reducer. <br>We used the <a href=\"https://medium.com/@matthew.holman/what-is-redux-ducks-46bcb1ad04b7\">Duck Pattern</a> and called our duck <em>appConfig</em>.</p><p>The <strong><em>rightDrawerState</em> </strong>state will control when the right drawer needs to\_open.</p><blockquote>The store configuration is up to\_you.</blockquote><h4>Using the\_reducer</h4><p>To know when opens the right menu, we have some\_steps.</p><p>1 — Through the useSelector hook, we access the redux state, created right\_above.</p><p>2 — Through the useEffect hook we control when the navigation will call the OpenDawer method, on line 22, that this time is accessed by DrawerAction since our navigation object received by props doesn’t have this method (we talked about it, remember?)</p><p>3 — Right after opening the menu, we dispatch another action on line 23, resetting the value of rightDrawerState on the\_store<em>.</em></p><p>4 — This is one of the most important steps: have you seen that on lines 21 and 25 we make a verification (rightDrawerState === ‘toggle’)? On line 21 we guarantee that our function is called if, and only if, the rightDrawerState reducer value is ‘toggle’. On line 25 this verification is necessary for the useEffect to be called again, but if, and only if, the rightDrawerState reducer value is updated somewhere to ‘toggle’.</p><h4>Finishing up</h4><p>Now we just need to call the functions to open the left and right application menus. <br>To do this let’s update the MainStack.js component.</p><p>Now we know that through the navigation context object we can open the left menu anytime. To open the right menu, we just need to update our appConfig reducer.</p><p>If everything went well we have both left and right menus working perfectly.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/600/1*9GpWhtouByauNs_qWOhYiQ.gif\" /></figure><p>Hope this article helps you somehow. <br>If you have any feedback, (even with grammar, since English is not my native language), you can contact me on <a href=\"mailto:brunno.hofmann@gmail.com\">brunno.hofmann@gmail.com</a> or commenting below.</p><p>Here is the project on\_Github.</p><p><a href=\"https://github.com/brunnohofmann/React-Native-Left-and-Right-Navigator\">brunnohofmann/React-Native-Left-and-Right-Navigator</a></p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=c899aeedf2cc\" width=\"1\" height=\"1\">"
