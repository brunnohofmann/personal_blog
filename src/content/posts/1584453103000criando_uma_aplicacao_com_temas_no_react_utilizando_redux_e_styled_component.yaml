title: Criando uma aplicação com temas no React utilizando Redux e Styled Component
link: >-
  https://medium.com/reactbrasil/criando-uma-aplica%C3%A7%C3%A3o-com-temas-no-react-utilizando-redux-e-styled-component-4bc7cef2b23e?source=rss-3fab1a6dde89------2
guid:
  isPermaLink: 'false'
  $t: 'https://medium.com/p/4bc7cef2b23e'
category:
  - redux
  - styled-components
  - react
  - themes
'dc:creator': Brunno Hofmann
pubDate: 'Tue, 17 Mar 2020 13:51:43 GMT'
'atom:updated': '2020-07-07T13:48:28.448Z'
'content:encoded': "<h3>Criando uma aplicação com temas no React utilizando Redux e Styled Components</h3><p>Como criar uma estrutura de temas e modificá-los em uma\_ação</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*BCzFnlKrAPyWhbVb\" /><figcaption>Photo by <a href=\"https://unsplash.com/@nickdepartee?utm_source=medium&amp;utm_medium=referral\">Nick de Partee</a> on\_<a href=\"https://unsplash.com?utm_source=medium&amp;utm_medium=referral\">Unsplash</a></figcaption></figure><p>Eu queria um certo distanciamento de Styled Components, não gostava da ideia de misturar componentes e estilos, o fato é que quando tive dificuldades com isso foi porque não dividia meus componentes da forma mais escalável possível (sou do tempo em que js, css e html não lidavam bem em morarem nas mesmas casas). O fato é quando precisei utilizá-lo — Styled Components — para criar uma aplicação com temas diversos vi que foi uma decisão necessária e acertada, desde que tudo isso seja estudado e estruturado de uma forma amigável.</p><p>Nesse texto resolvi explicar como fiz essa estrutura de temas utilizando React, Redux e Styled Component.</p><p>Vou da premissa que você já possui uma aplicação React e entendimento básico de como funciona\_Redux</p><h3>Configurando Store</h3><p>1 — Primeiro instalaremos as dependências</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/34d8afa9653a23d0b435df38c2907888/href\">https://medium.com/media/34d8afa9653a23d0b435df38c2907888/href</a></iframe><p>2 — Configuramos actions e\_reducers</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/1536407256b13e0d52e130f8cb34e12b/href\">https://medium.com/media/1536407256b13e0d52e130f8cb34e12b/href</a></iframe><blockquote>Coloquei em actions e reducers no mesmo arquivo, uma estratégia conhecida como Duck Pattern. Nesse caso não utilizei nenhuma biblioteca para isso, mas há o ReduxSauce, uma biblioteca que ajuda nesse quesito, vale conferir\_depois.</blockquote><p>Após isso adicione o recém criado reducer na sua store para utilizarmos mais\_tarde.</p><h3>Configuramos temas e\_provider</h3><p>No trecho de código acima dissemos, por meio do estado inicial (initState), que nosso tema inicial seria o &#39;light&#39;. Para estruturar este exemplo utilizaremos os temas &#39;dark&#39;e &#39;light&#39;, mas você pode escolher a quantidade de temas que\_quiser.</p><p>Agora criamos os dados que vão refletir em nosso tema. <br>No fim das contas é apenas um objeto Javascript que será utilizado baseado no tema escolhido. Isso quer dizer que você pode estruturar esse objeto da maneira que achar melhor. Atente-se, entretanto, que os temas devem possuir a mesma estrutura, caso contrário sua aplicação pode quebrar. <br>Para o exemplo criei apenas duas\_cores.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/7a281c6134bb0bdd574bccbb832ddac2/href\">https://medium.com/media/7a281c6134bb0bdd574bccbb832ddac2/href</a></iframe><h4>Configurando o\_Provider</h4><p>Da mesma forma que no redux fazemos um provider para incluir o estado em toda a aplicação, fazemos o mesmo com o Styled Components, que possui um provider que vai englobar todos os components que foram criados com o styled components, incluindo as variáveis do tema escolhido também em todos\_eles.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/d92fa43fdf861b96244587f2ed11449b/href\">https://medium.com/media/d92fa43fdf861b96244587f2ed11449b/href</a></iframe><p>No exemplo acima o redux, ao ser atualizado, vai incluir todo aquele objeto Javascript que fizemos no arquivo de temas dentro do provider, mas baseado no nome do tema que está no redux, por isso é importante colocar os mesmo nome no tema e no\_redux.</p><p>Agora incluímos o Provider no\_App</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/735dc6e723631e3f727870d7d2d0806e/href\">https://medium.com/media/735dc6e723631e3f727870d7d2d0806e/href</a></iframe><p>Você ter inúmeros providers quanto possível, mas é importante que o ThemeProvider esteja dentro do Provider do\_Redux.</p><h3>Modificando o\_tema</h3><p>Para utilizar o tema, chamamos o styled component, que por padrão passa todo o tema escolhido para os componentes estilizados pelo styled component.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/539c06079d41b31341a28358e785a238/href\">https://medium.com/media/539c06079d41b31341a28358e785a238/href</a></iframe><p>Em alguns casos pode ser necessário acessar o tema dentro de componentes não estilizados pelo Styled Components. Nesse caso podemos utilizar o ThemeContext do styled component junto do useContext do React para\_isso.</p><iframe src=\"\" width=\"0\" height=\"0\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/0d047d2a013679bee90f0b90b8d6b801/href\">https://medium.com/media/0d047d2a013679bee90f0b90b8d6b801/href</a></iframe><p>Então é\_isso.</p><p>Deixo a seguir um sandbox com o exemplo funcionando.</p><iframe src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fcodesandbox.io%2Fembed%2Fy07i8&amp;display_name=CodeSandbox&amp;url=https%3A%2F%2Fcodesandbox.io%2Fs%2Fy07i8&amp;image=https%3A%2F%2Fcodesandbox.io%2Fapi%2Fv1%2Fsandboxes%2Fy07i8%2Fscreenshot.png&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=codesandbox\" width=\"1000\" height=\"500\" frameborder=\"0\" scrolling=\"no\"><a href=\"https://medium.com/media/731870a433cf26128d493cc1bf9356db/href\">https://medium.com/media/731870a433cf26128d493cc1bf9356db/href</a></iframe><p>Curtiu? Tem alguma\_dúvida?</p><p>Me pinga ou comenta por aqui\_:D</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=4bc7cef2b23e\" width=\"1\" height=\"1\"><hr><p><a href=\"https://medium.com/reactbrasil/criando-uma-aplica%C3%A7%C3%A3o-com-temas-no-react-utilizando-redux-e-styled-component-4bc7cef2b23e\">Criando uma aplicação com temas no React utilizando Redux e Styled Component</a> was originally published in <a href=\"https://medium.com/reactbrasil\">React Brasil</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>"
